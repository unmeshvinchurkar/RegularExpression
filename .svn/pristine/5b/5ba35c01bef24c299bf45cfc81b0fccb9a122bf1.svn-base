%TERMINALS%
+
-
*
/
(
)
{
}
INTEGER
FLOAT
STRING
CHAR
BOOLEAN
COMMA
$
EQUALS
TYPE
VARNAME
SPACE_EMPTY
FUNCTION
SEMICOLON
NOT_OPERATOR
LOGICAL_OPERATOR
or
and
COMPARISON_OPERATOR
FOR
WHILE
BOOL_VALUE
SINGLE_OPERATOR
VOID
COLON
IF
ELSE
%END%


%GRAMMER%

VALUE=STRING
VALUE=CHAR
VALUE=BOOLEAN

S=PROGRAM$
PROGRAM=PROGRAM FUNCTION_STMT
PROGRAM=FUNCTION_STMT

FUNCTION_STMT=RETURN_TYPE FUNCTION_DECL BODY
RETURN_TYPE=VOID
RETURN_TYPE=TYPE
BODY={STATEMENT_LIST}
BODY={}
FUNCTION_DECL= FUNCTION VARNAME (FUNCTION_PARAM)
FUNCTION_DECL= FUNCTION VARNAME ()
FUNCTION_PARAM=FUNCTION_PARAM COMMA FUNCTION_PARAM_TERM
FUNCTION_PARAM=FUNCTION_PARAM_TERM
FUNCTION_PARAM_TERM=TYPE VARNAME


STATEMENT_LIST={}
STATEMENT_LIST=STATEMENT_LIST STMT_TERM
STATEMENT_LIST=STMT_TERM
STMT_TERM=STMT
STMT_TERM={STATEMENT_LIST}

SEMI_COL=SEMICOLON SEMI_COL
SEMI_COL=SEMICOLON

STMT=ASSIGN_STMT SEMI_COL
STMT=DECLARATION_STMT SEMI_COL
STMT=WHILE_STMT
STMT=FOR_STMT
STMT=CALL_EXPR SEMI_COL
STMT=SINGLE_EXP SEMI_COL
STMT=IF_STMT

DECLARATION_STMT=TYPE D_TERM
D_TERM=D_TERM COMMA D_TERM
D_TERM=VARNAME EQUALS EXPR
D_TERM=VARNAME EQUALS LOGICAL_EXPR
D_TERM=VARNAME EQUALS VALUE
D_TERM=VARNAME

ASSIGN_STMT=VARNAME EQUALS EXPR
ASSIGN_STMT=VARNAME EQUALS LOGICAL_EXPR

WHILE_STMT=WHILE_DECL WHILE_BODY
WHILE_DECL= WHILE(LOGICAL_EXPR)
WHILE_BODY={STATEMENT_LIST}
WHILE_BODY={}

IF_STMT=IF_STMT_TERM IFELSE_BODY
IF_STMT=IF_STMT_TERM ELSE_STMT_TERM
IF_STMT_TERM=IF(LOGICAL_EXPR) IFELSE_BODY
ELSE_STMT_TERM=ELSE IFELSE_BODY
IFELSE_BODY={STATEMENT_LIST}
IFELSE_BODY={}

FOR_STMT=FOR_DECL FOR_BODY
FOR_DECL=FOR(FOR_INIT_STMT SEMICOLON LOGICAL_EXPR SEMICOLON ASSIGN_STMT)
FOR_INIT_STMT=DECLARATION_STMT
FOR_INIT_STMT=ASSIGN_STMT
FOR_BODY={STATEMENT_LIST}
FOR_BODY={}

EXPR=EXPR+TERM
EXPR=EXPR-TERM
EXPR=TERM
TERM=TERM*FACTOR
TERM=TERM/FACTOR
TERM=CALL_EXPR
TERM=SINGLE_EXP
TERM=FACTOR
FACTOR=(EXPR)
FACTOR=INTEGER
FACTOR=FLOAT
FACTOR=VARNAME

LOGICAL_EXPR=LOGICAL_EXPR or T_TERM
LOGICAL_EXPR=T_TERM
T_TERM=T_TERM and F_TERM
T_TERM=F_TERM
F_TERM= EXPR COMPARISON_OPERATOR EXPR
F_TERM=CALL_EXPR
F_TERM=(LOGICAL_EXPR)
F_TERM=BOOL_VALUE


CALL_EXPR=VARNAME(FUNCTION_ARGS)
CALL_EXPR=VARNAME()
FUNCTION_ARGS=FUNCTION_ARGS COMMA FUN_ARG
FUNCTION_ARGS=FUN_ARG
FUN_ARG=EXPR
FUN_ARG=LOGICAL_EXPR
FUN_ARG=VALUE


SINGLE_EXP=VARNAME SINGLE_OPERATOR
SINGLE_EXP=SINGLE_OPERATOR VARNAME
%END%
